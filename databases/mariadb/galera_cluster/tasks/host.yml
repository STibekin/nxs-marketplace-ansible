---

- name: Ensure apt cache is updated
  apt:
    update_cache: true
  changed_when: false

- name: Ensure MariaDB needed packages are installed
  apt:
   name:
     - python3-mysqldb
     - wget
     - gnupg2
     - curl
     - lsb-release
     - software-properties-common
     - dirmngr
     - apt-transport-https
   state: present

- name: Create directory /etc/apt/keyrings
  become: true
  file:
    path: /etc/apt/keyrings
    state: directory

- name: Download MariaDB release signing key
  become: true
  command: "curl -o /etc/apt/keyrings/mariadb-keyring.pgp 'https://mariadb.org/mariadb_release_signing_key.pgp'"

- name: Add MariaDB Repository for {{ ansible_distribution }}
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/mariadb-keyring.pgp] https://mirror.truenetwork.ru/mariadb/repo/{{ mariadb_host_version }}/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} main"
    state: present
    update_cache: true

- name: Install MariaDB packages
  apt:
    pkg: ['mariadb-server', 'mariadb-common', 'mariadb-backup', 'rsync']
    update_cache: true

- name: Add /etc/mysql/my.cnf
  ansible.builtin.template:
    src: etc/mysql/my.cnf.j2
    dest: /etc/mysql/my.cnf
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart MariaDB

- name: Add /root/.my.cnf
  template:
    src: root/.my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600

# Make sure that NOBODY can access the server without a password
- name: Set Mariadb root password
  community.mysql.mysql_user:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: ""
    host: localhost
    name: root
    password: "{{ mariadb_root_password }}"
    state: present
    update_password: always
  when: empty_root_pass == true

# Kill anonymous users
- name: Removes anonymous user account for all hosts
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    host_all: true
    name: ''
    state: absent
  when: new_cluster == true

- name: Configure Galera cluster
  template:
    src: galera.cnf.j2
    dest: /etc/mysql/conf.d/galera.cnf
  # notify: Restart MariaDB
  become: true

- name: Set permissions
  file: path=/etc/mysql owner=root group=mysql mode=0750

- name: Stop mariadb
  ansible.builtin.service:
    name: mariadb
    state: stopped
  when: new_cluster == true
  
- name: Create cluster mariadb
  ansible.builtin.command: 
    cmd: galera_new_cluster
  run_once: true
  when: new_cluster == true 

- name: Start mariadb
  ansible.builtin.service:
    name: mariadb
    state: started
  when: new_cluster == true




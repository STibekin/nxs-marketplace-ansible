---

- name: "Check Ansible version"
  assert:
    msg: "Ansible {{ ansible_version.full }} is not supported. You should have at least Ansible {{ ansible_major_version }}.{{ ansible_minor_version }}.*"
    that:
      - ansible_version.major >= {{ ansible_major_version }} and ansible_version.minor >= {{ ansible_minor_version }}

- name: Check OS family and version
  fail: msg='The operating system ({{ ansible_distribution }} {{ ansible_distribution_version }}) is not supported'
  when: ((ansible_distribution != 'Debian' or (ansible_distribution_major_version|int < 11 or ansible_distribution_major_version|int > 12))) and
        ((ansible_distribution != 'Ubuntu' or (ansible_distribution_major_version|int < 20 or ansible_distribution_major_version|int > 22)))

### Install packages
### https://galeracluster.com/library/documentation/install-mysql.html

#проверить на облачных дистрибутивах этот пакет
- name: Install pre-reqs (Debian)
  apt:
    pkg: "{{ debian_pre_req_packages }}"
    state: present
    update_cache: true
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: ansible_distribution == 'Debian'

- name: Install pre-reqs (Ubuntu)
  apt:
    pkg: "{{ ubuntu_pre_req_packages }}"
    state: present
    update_cache: true
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: ansible_distribution == 'Ubuntu'

#Enable the Codership repository
- name: Add GnuPG key
  apt_key:
    keyserver: "{{ codership_repo_keyserver }}"
    id: "{{ codership_repo_key }}"
    state: "present"

- name: Add repo
  apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: yes
    filename: galera.list
  with_items:
    - deb https://releases.galeracluster.com/mysql-wsrep-{{ mysql_wsrep_version }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }}  main
    - deb https://releases.galeracluster.com/galera-{{ galera_version }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} main

- name: Copy galera preferences template
  template:
    src: galera.pref.j2
    dest: /etc/apt/preferences.d/galera.pref
    owner: root
    group: root
    mode: '0644'

- name: Update package list
  apt:
    update_cache: true

# Galera Cluster
- import_tasks: galera_cluster.yml
  when: "'galera-cluster' in group_names"

# Galera Arbitrator
- import_tasks: galera_arbitrator.yml
  when: "'galera-arbitrator' in group_names"
